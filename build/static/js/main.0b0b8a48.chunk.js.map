{"version":3,"sources":["App.js","reducers/rootReducer.js","store.js","index.js","actions/actions.js"],"names":["v4","connect","state","add_todo","set_text","todo_position","props","className","type","value","text","onChange","e","target","onClick","onDragEnd","destination","source","console","log","index","droppableId","main","itemCopy","items","prev","splice","prevFunc","_","map","data","key","title","provided","ref","innerRef","droppableProps","el","draggableId","id","snapshot","isDragging","draggableProps","dragHandleProps","name","placeholder","require","ADD_TODO","SET_TEXT","TODO_POSITION","initialState","todo","done","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b0b8a48.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport _ from \"lodash\";\nimport { v4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport { add_todo, set_text, todo_position } from \"./actions/actions\";\n\nconst item1 = {\n  id: v4(),\n  name: \"Clean the house\",\n};\nconst item2 = {\n  id: v4(),\n  name: \"Clean the house\",\n};\nconst item3 = {\n  id: v4(),\n  name: \"Clean work\",\n};\n\nfunction App(props) {\n  const handleDragEnd = ({ destination, source }) => {\n    console.log(\"from\", source);\n    console.log(\"to\", destination);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.index === source.index &&\n      destination.droppableId === source.droppableId\n    ) {\n      return;\n    }\n    console.log(props.main);\n    const prev = props.main;\n    const itemCopy = { ...props.main[source.droppableId].items[source.index] };\n\n    const prevFunc = () => {\n      const prev = { ...props.main };\n      prev[source.droppableId].items.splice(source.index, 1);\n\n      prev[destination.droppableId].items.splice(\n        destination.index,\n        0,\n        itemCopy\n      );\n      return prev;\n    };\n\n    props.todo_position(prevFunc());\n  };\n\n  const addItem = () => {\n    props.add_todo(props.text);\n    // console.log(props);\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input\n          type=\"text\"\n          value={props.text}\n          onChange={(e) => props.set_text(e.target.value)}\n        />\n        <button onClick={addItem}>Add</button>\n      </div>\n      <div className=\"boards-container\">\n        <DragDropContext onDragEnd={handleDragEnd}>\n          {_.map(props.main, (data, key) => {\n            return (\n              <div key={key} className={`column`}>\n                <h3>{data.title}</h3>\n                <Droppable droppableId={key}>\n                  {(provided) => {\n                    return (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                        className={`droppable-col ${data.title}`}\n                      >\n                        {data.items.map((el, index) => {\n                          console.log(data);\n                          return (\n                            <Draggable\n                              key={el.id}\n                              index={index}\n                              draggableId={el.id}\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <div\n                                    className={`item ${\n                                      snapshot.isDragging && \"dragging\"\n                                    }`}\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                  >\n                                    {el.name}\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            );\n          })}\n        </DragDropContext>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nexport default connect(mapStateToProps, { add_todo, set_text, todo_position })(\n  App\n);\n","const { v4 } = require(\"uuid\");\r\nconst { ADD_TODO, SET_TEXT, TODO_POSITION } = require(\"../actions/actions\");\r\n\r\nconst item1 = {\r\n  id: v4(),\r\n  name: \"Clean the house\",\r\n};\r\nconst item2 = {\r\n  id: v4(),\r\n  name: \"Clean the house\",\r\n};\r\nconst item3 = {\r\n  id: v4(),\r\n  name: \"Clean work\",\r\n};\r\n\r\nconst initialState = {\r\n  text: \"yup I am working\",\r\n  main: {\r\n    todo: {\r\n      title: \"Todo\",\r\n      items: [item1, item2],\r\n    },\r\n    \"in-progress\": {\r\n      title: \"In-Progress\",\r\n      items: [item3],\r\n    },\r\n    done: {\r\n      title: \"Completed\",\r\n      items: [],\r\n    },\r\n  },\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      console.log(action.data);\r\n      return {\r\n        ...state,\r\n        main: {\r\n          ...state.main,\r\n          todo: {\r\n            ...state.main.todo,\r\n            items: [{ id: v4(), name: action.data }, ...state.main.todo.items],\r\n          },\r\n        },\r\n      };\r\n    case SET_TEXT:\r\n      console.log(action.data);\r\n      return {\r\n        ...state,\r\n        text: action.data,\r\n      };\r\n\r\n    case TODO_POSITION:\r\n      console.log(action.data);\r\n      return {\r\n        ...state,\r\n        main: action.data,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const SET_TEXT = \"SET_TEXT\";\r\nexport const TODO_POSITION = \"TODO_POSITION\";\r\n\r\nexport const add_todo = (data) => {\r\n  console.log(\"yes data coming in action\");\r\n  console.log(data);\r\n  return {\r\n    type: ADD_TODO,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const todo_position = (data) => {\r\n  return {\r\n    type: TODO_POSITION,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const set_text = (data) => {\r\n  return {\r\n    type: SET_TEXT,\r\n    data,\r\n  };\r\n};\r\n"],"sourceRoot":""}